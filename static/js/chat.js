
    function setReceiver(receiverId, username) {
        document.getElementById('receiver_id').value = receiverId;
        document.getElementById('chat-title').innerText = `Chat v·ªõi ${username}`;
    }
document.querySelectorAll(".friend-item").forEach(item => {
    let name = item.querySelector(".friend-name").innerText.trim();
    let initial = name.charAt(0).toUpperCase();

    let avatar = item.querySelector(".avatar");
    avatar.innerText = initial;

    // Ki·ªÉm tra xem ƒë√£ l∆∞u m√†u ch∆∞a
    let savedColor = localStorage.getItem(`avatarColor-${name}`);

    if (!savedColor) {
        // N·∫øu ch∆∞a c√≥ m√†u, t·∫°o m√†u ng·∫´u nhi√™n v√† l∆∞u l·∫°i
        savedColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;
        localStorage.setItem(`avatarColor-${name}`, savedColor);
    }

    // G√°n m√†u n·ªÅn
    avatar.style.backgroundColor = savedColor;
});


document.addEventListener("DOMContentLoaded", function () {
    let savedReceiverId = localStorage.getItem("currentReceiverId");
    let savedReceiverName = localStorage.getItem("currentReceiverName");

    if (savedReceiverId && savedReceiverName) {
        setReceiver(savedReceiverId, savedReceiverName, true);
    } else {
        document.querySelector(".chat-container").classList.add("hidden"); // ·∫®n h·ªôp chat khi v√†o trang
    }
});

function setReceiver(receiverId, username, isReload = false) {
    document.getElementById('receiver_id').value = receiverId;
    document.getElementById('chat-title').innerText = `Chat v·ªõi ${username}`;
    document.querySelector(".chat-container").classList.remove("hidden"); // Hi·ªán h·ªôp chat

    // L∆∞u tr·∫°ng th√°i ng∆∞·ªùi nh·∫Øn tin v√†o localStorage (tr·ª´ khi ƒëang kh√¥i ph·ª•c t·ª´ l·∫ßn tr∆∞·ªõc)
    if (!isReload) {
        localStorage.setItem("currentReceiverId", receiverId);
        localStorage.setItem("currentReceiverName", username);
    }

    // ·∫®n t·∫•t c·∫£ tin nh·∫Øn tr∆∞·ªõc ƒë√≥
    document.querySelectorAll(".chat-message").forEach(msg => msg.style.display = "none");

    // Hi·ªÉn th·ªã tin nh·∫Øn li√™n quan ƒë·∫øn ng∆∞·ªùi nh·∫≠n ƒë∆∞·ª£c ch·ªçn
    document.querySelectorAll(`.chat-message[data-sender="${receiverId}"], .chat-message[data-receiver="${receiverId}"]`)
        .forEach(msg => msg.style.display = "block");
}
document.addEventListener("DOMContentLoaded", function () {
    let searchInput = document.getElementById("search-friend");
    let friendsList = document.querySelectorAll(".friend-item");

    searchInput.addEventListener("keyup", function () {
        let filter = searchInput.value.toLowerCase();

        friendsList.forEach(friend => {
            let friendName = friend.querySelector(".friend-name").innerText.toLowerCase();
            if (friendName.includes(filter)) {
                friend.style.display = "flex";
            } else {
                friend.style.display = "none";
            }
        });
    });
});
// K·∫øt n·ªëi ƒë·∫øn WebSocket Server (Socket.IO)
const socket = io("http://127.0.0.1:5000", {
    transports: ["websocket"],  // Ch·ªâ s·ª≠ d·ª•ng WebSocket, tr√°nh polling
});

// L∆∞u user hi·ªán t·∫°i t·ª´ Flask v√†o bi·∫øn `currentUserId`
const currentUserId = document.getElementById("current_user_id")?.value || null;

// G√°n s·ª± ki·ªán cho danh s√°ch b·∫°n b√®
document.querySelectorAll(".friend-item").forEach(item => {
    let name = item.querySelector(".friend-name").innerText.trim();
    let initial = name.charAt(0).toUpperCase();
    let avatar = item.querySelector(".avatar");

    // G√°n ch·ªØ c√°i ƒë·∫ßu l√†m avatar
    avatar.innerText = initial;

    // Ki·ªÉm tra m√†u trong LocalStorage
    let savedColor = localStorage.getItem(`avatarColor-${name}`);
    if (!savedColor) {
        savedColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;
        localStorage.setItem(`avatarColor-${name}`, savedColor);
    }
    avatar.style.backgroundColor = savedColor;
});

// Kh√¥i ph·ª•c tr·∫°ng th√°i khi t·∫£i l·∫°i trang
document.addEventListener("DOMContentLoaded", function () {
    let savedReceiverId = localStorage.getItem("currentReceiverId");
    let savedReceiverName = localStorage.getItem("currentReceiverName");

    if (savedReceiverId && savedReceiverName) {
        setReceiver(savedReceiverId, savedReceiverName, true);
    } else {
        document.querySelector(".chat-container").classList.add("hidden"); // ·∫®n h·ªôp chat khi ch∆∞a ch·ªçn ai
    }
});

// Ch·ªçn ng∆∞·ªùi nh·∫≠n tin nh·∫Øn
function setReceiver(receiverId, username, isReload = false) {
    document.getElementById('receiver_id').value = receiverId;
    document.getElementById('chat-title').innerText = `Chat v·ªõi ${username}`;
    document.querySelector(".chat-container").classList.remove("hidden");

    // L∆∞u tr·∫°ng th√°i v√†o localStorage (tr·ª´ khi ƒëang kh√¥i ph·ª•c t·ª´ l·∫ßn tr∆∞·ªõc)
    if (!isReload) {
        localStorage.setItem("currentReceiverId", receiverId);
        localStorage.setItem("currentReceiverName", username);
    }

    // ·∫®n tin nh·∫Øn c≈© v√† ch·ªâ hi·ªÉn th·ªã tin nh·∫Øn li√™n quan
    document.querySelectorAll(".chat-message").forEach(msg => msg.style.display = "none");
    document.querySelectorAll(`.chat-message[data-sender="${receiverId}"], .chat-message[data-receiver="${receiverId}"]`)
        .forEach(msg => msg.style.display = "block");
}

// T√¨m ki·∫øm b·∫°n b√®
document.addEventListener("DOMContentLoaded", function () {
    let searchInput = document.getElementById("search-friend");
    let friendsList = document.querySelectorAll(".friend-item");

    searchInput.addEventListener("keyup", function () {
        let filter = searchInput.value.toLowerCase();
        friendsList.forEach(friend => {
            let friendName = friend.querySelector(".friend-name").innerText.toLowerCase();
            friend.style.display = friendName.includes(filter) ? "flex" : "none";
        });
    });
});

// X·ª≠ l√Ω g·ª≠i tin nh·∫Øn
document.querySelector(".chat-input").addEventListener("submit", function (e) {
    e.preventDefault();
    let messageInput = document.getElementById("message");
    let receiverId = document.getElementById("receiver_id").value;

    if (messageInput.value.trim() !== "") {
        // G·ª≠i tin nh·∫Øn qua WebSocket
        socket.emit("message", {
            sender_id: currentUserId,
            receiver_id: receiverId,
            message: messageInput.value
        });

        // Hi·ªÉn th·ªã tin nh·∫Øn ngay tr√™n UI
        appendMessage({
            sender_id: currentUserId,
            receiver_id: receiverId,
            username: "B·∫°n",
            message: messageInput.value,
            sent_at: new Date().toLocaleTimeString()
        });

        messageInput.value = ""; // X√≥a n·ªôi dung input sau khi g·ª≠i
    }
});

// Nh·∫≠n tin nh·∫Øn t·ª´ WebSocket Server
socket.on("message", (data) => {
    console.log("üì© Tin nh·∫Øn nh·∫≠n ƒë∆∞·ª£c:", data);

    if (!data || !data.message) {
        console.error("‚ùå D·ªØ li·ªáu tin nh·∫Øn kh√¥ng h·ª£p l·ªá:", data);
        return;
    }

    let currentReceiverId = document.getElementById("receiver_id").value;

    // Lu√¥n hi·ªÉn th·ªã tin nh·∫Øn n·∫øu ng∆∞·ªùi d√πng l√† ng∆∞·ªùi nh·∫≠n
    if (data.receiver_id == currentUserId || data.sender_id == currentReceiverId) {
        appendMessage(data);
    } else {
        console.warn("üö´ Tin nh·∫Øn kh√¥ng d√†nh cho cu·ªôc tr√≤ chuy·ªán n√†y.");
    }
});


function appendMessage(data) {
    let chatBox = document.getElementById("chat-box");

    let messageElement = document.createElement("div");
    messageElement.classList.add("chat-message");
    messageElement.classList.add(data.sender_id == currentUserId ? "sent" : "received");
    messageElement.dataset.sender = data.sender_id;
    messageElement.dataset.receiver = data.receiver_id;

    // Ki·ªÉm tra n·∫øu username ho·∫∑c sent_at b·ªã undefined, thay th·∫ø b·∫±ng gi√° tr·ªã m·∫∑c ƒë·ªãnh
    let displayUsername = data.username ? data.username : "Ng∆∞·ªùi d√πng";
    let displayTime = data.sent_at ? data.sent_at : new Date().toLocaleTimeString();

    messageElement.innerHTML = `<strong>${displayUsername}:</strong> ${data.message}
                                <small class="timestamp">${displayTime}</small>`;

    chatBox.appendChild(messageElement);
    chatBox.scrollTop = chatBox.scrollHeight;  // Cu·ªôn xu·ªëng tin nh·∫Øn m·ªõi nh·∫•t
}
document.querySelector('/logout').addEventListener('click', function() {
    // X√≥a t·∫•t c·∫£ d·ªØ li·ªáu localStorage khi ng∆∞·ªùi d√πng ƒëƒÉng xu·∫•t
    localStorage.clear();
    window.location.href = '/login';
});

